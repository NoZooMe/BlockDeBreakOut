03/30
インクルードはヘッダーに書いておくと、そのクラスがどのクラスに依存しているのか分かりやすくていい
そういえばヘッダーは変更するとコンパイルし直しになるんだった。それならヘッダーには必要最小限かいといて、コメントでクラス依存について言及すればいいか
とりあえずメニューをタイトルとゲーム画面に実装したけど二つバグが見つかる。まずゲームに入った時にメニューが開けなかったりボールが打てない問題。多分キーボードが悪さをしている。そして次にボールの当たり判定がおかしい問題。
この2つを解決するところから。それが終わったら次はテキストシーンを作りたい。

03/31
キーボードのupdateが2回呼ばれていたことがescape==1に引っかからなかった原因だった(奇数の時に引っかからない)。これは注意。次は当たり判定（右のブロックにあたると左のブロックが消える現象について
当たり判定も修正完了。原因はベクトルの内積の符号を考える際に2つの内積をかけて符号を確かめていたからだった。screenが大きくなったことによって桁あふれを起こしていたので、内積を計算した後にそれだけで符号に
変換するようにして桁あふれを防ぐようにした。
次、弾幕を実装したい。
弾幕実装について、BulletMgrに1を渡せば一面の弾幕が出るように、などで管理したい。カウントはGameSceneなどが持ち、それを参照してBulletMgrも出す弾を決める。
今実装しているクラスでは、AbstractBulletをCircleObjectに継承させて作ったので四角い弾幕などが作れない。本来はAbstractObjectのようなクラスを作り、そこにCircleクラスやCircleCollisionクラスをコンポジションさせるのがいいかなぁと思う。

04/01
CircleObjectのDrawを色白に固定したことで変更しなきゃいけないとこ多すぎる。柔軟性の無い実装は避けるように。
PlayerStatusクラスを作ってPlayerに持たせたら管理楽そう。
よくよく考えたら、絶対にStageの流れとかはStage1Sceneみたいなものが持っていたほうが良いよな。今のままだとBulletMgrやBlockMgrが個別に持つことになるので、それらを持つStageSceneを作るような設計にしたい。
弾20個、playerの方に飛ばしてくださいとStageSceneがBulletMgrにお願いする。いつやるかなどはStageSceneがcntを持ってそれで管理。ColMgrにplayerとblockを渡して当たり判定しといてくださいもStageSceneの仕事。
ColMgr.checkPlayerandBlockみたいな感じ？ColMgrのコンストラクタにplayerをいれといて、StageSceneでインスタンス化して、当たった時はColMrgからplayerに連絡してもらう？
当たり判定を実装したいときは、GameSceneにObjectを追加してさらにColMgrにも引数としてそのObjectを渡す。
PlayerはGameSceneでインスタンス化する。ただ、Updateはその下のStageSceneUpdateで行わせる。
GameSceneの中でTextScene1、StageScene1と遷移させる。